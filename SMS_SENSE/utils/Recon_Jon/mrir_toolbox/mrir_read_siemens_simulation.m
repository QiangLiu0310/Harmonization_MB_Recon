function img = mrir_read_siemens_simulation(dirname)
%MRIR_READ_SIEMENS_SIMULATION  loads all "WriteToFile_*.ima" files generated by an ICE simulation
%
% img = mrir_read_siemens_simulation(dirname)

% jonathan polimeni <jonp@padkeemao.nmr.mgh.harvard.edu>, 2007/aug/28
% $Id: mrir_read_siemens_simulation.m,v 1.3 2007/08/28 19:28:29 jonp Exp $
%**************************************************************************%

  VERSION = '$Revision: 1.3 $';
  if ( nargin == 0 ), help(mfilename); return; end;


  %==--------------------------------------------------------------------==%

  if ( ~exist(dirname, 'dir') ),
    error('directory [%s] does not exist!', dirname);
  end;

  if ( ~exist(fullfile(dirname, 'WriteToFile_0001.ima'), 'file') ),
    error('missing "WriteToFile_0001.ima"');
  end;

  if ( ~exist(fullfile(dirname, 'MiniHead_ima_0001.IceHead'), 'file') ),
    error('missing "MiniHead_ima_0001.IceHead"');
  end;

  imafiles = dir(fullfile(dirname, 'WriteToFile_*.ima'));

  if ( isempty(imafiles) ),
    error('no IMA files found in [%s]', dirname);
  end;


  %==--------------------------------------------------------------------==%
  % read in first miniheader file to find out rows and cols for each image
  
  headerfiles = dir(fullfile(dirname, 'MiniHead_ima_*.IceHead'));

  fp = fopen(fullfile(dirname, 'MiniHead_ima_0001.IceHead'), 'r', 'l');
  minihead = fscanf(fp, '%c');
  fclose(fp);

  match = regexp(minihead, ['<Param(?<type>[A-Za-z]+)\."(?<param>SequenceDescription)">\s*{\s*(?<value>[\S]*)\s*}'], 'names');
  sequence_protocol = regexprep(match.value, '\+AF8\-', '_');
  
  match = regexp(minihead, ['<Param(?<type>[A-Za-z]+)\."(?<param>NoOfRows)">\s*{\s*(?<value>[0-9]*)\s*}'], 'names');
  rows = str2num(match.value);

  match = regexp(minihead, ['<Param(?<type>[A-Za-z]+)\."(?<param>NoOfCols)">\s*{\s*(?<value>[0-9]*)\s*}'], 'names');
  cols = str2num(match.value);

  %==--------------------------------------------------------------------==%
  % read in all binary IMA files in this directory
  
  for ind = 1:length(imafiles),
    img(:,:,ind) = mrir_read_siemens_WriteToFile(fullfile(dirname, imafiles(ind).name), 'short', rows, cols);
  end;

  dstr = sprintf('read in %d "WriteToFile" IMA files, %dx%dx%d image matrix', length(imafiles), rows, cols, length(imafiles));
  disp(sprintf('==> [%s]: %s', mfilename, dstr));



  return;


  %************************************************************************%
  %%% $Source: /space/padkeemao/1/users/jonp/cvsjrp/PROJECTS/IMAGE_RECON/mrir_toolbox/mrir_read_siemens_simulation.m,v $
  %%% Local Variables:
  %%% mode: Matlab
  %%% fill-column: 76
  %%% comment-column: 0
  %%% End:
